# Use Docker Compose v2
version: '3.9'

services:
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - ./volumes/redis:/data:rw,z
    ports:
      - '16379:6379'
    expose:
      - 6379

  mariadb:
    image: mariadb:10.11
    restart: always
    volumes:
      - ./volumes/mariadb:/var/lib/mysql:rw,z
    expose:
      - 3306
    ports:
      - '13306:3306'
    environment:
      - MARIADB_RANDOM_ROOT_PASSWORD=yes
      - MARIADB_USER=mariadb
      - MARIADB_PASSWORD=mariadb
      - MARIADB_DATABASE=chaosarchives
      - TZ=UTC

  minio:
    image: minio/minio
    entrypoint: sh
    command: -c 'mkdir -p /data/chaosarchives && minio server /data --console-address ":9001"'
    volumes:
      - ./volumes/minio:/data:rw,z
    ports:
      - '9000:9000'
      - '9001:9001'
    profiles:
    - development

  steward:
    build: ./
    image: chaosarchives
    restart: always
    init: true
    links:
      - mariadb
    depends_on:
      - mariadb
    command: node dist/apps/steward/main.js
    volumes:
      - type: bind
        source: './config/production.yml'
        target: '/usr/src/app/config/production.yml'
        read_only: true
    expose:
      - 8112
    environment:
      - NODE_ENV=${NODE_ENV:-production}

  chaosarchives:
    build: ./
    image: chaosarchives
    restart: always
    init: true
    links:
      - mariadb
      - redis
      - steward
    depends_on:
      - mariadb
      - redis
      - steward
    volumes:
      - type: bind
        source: './config/production.yml'
        target: '/usr/src/app/config/production.yml'
        read_only: true
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    ports:
      - '${CHAOSARCHIVES_EXTERNAL_PORT:-8111}:8111'
    healthcheck:
      test: [ 'CMD-SHELL', 'curl -f http://localhost:8111/api | grep -F "Hear. Feel. Think."' ]
      interval: 5m
      timeout: 30s
      retries: 3
      start_period: 40s
      start_interval: 5s

